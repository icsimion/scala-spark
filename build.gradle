plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

group 'spark.project'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    provided
}

sourceSets {
    main {
        compileClasspath += configurations.provided
    }
}

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
}

dependencies {

    compile group: 'org.scala-lang', name: 'scala-library', version: "${scalaVersion}"
    compile group: 'org.scala-lang', name: 'scala-reflect', version: "${scalaVersion}"
    compile group: 'org.scala-lang', name: 'scala-compiler', version: "${scalaVersion}"


    compile group: 'org.apache.spark', name: 'spark-core_2.11', version: "${sparkVersion}"
    compile group: 'org.apache.spark', name: 'spark-mllib_2.11', version: "${sparkVersion}"
    compile group: 'org.apache.spark', name: 'spark-sql_2.11', version: "${sparkVersion}"
    compile group: 'org.apache.spark', name: 'spark-streaming_2.11', version: "${sparkVersion}"
    compile group: 'org.apache.spark', name: 'spark-streaming-flume-assembly_2.11', version: "${sparkVersion}"
    compile group: 'org.apache.spark', name: 'spark-graphx_2.11', version: "${sparkVersion}"
    compile group: 'org.apache.spark', name: 'spark-launcher_2.11', version: "${sparkVersion}"
    compile group: 'org.apache.spark', name: 'spark-catalyst_2.11', version: "${sparkVersion}"


    compile group: 'commons-io', name: 'commons-io', version: '2.5'
}

task run(type: JavaExec, dependsOn: classes) {
    main = mainClassFile
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}

jar {
    classifier = 'all'
    manifest {
        attributes 'Implementation-Title': title,
                'Implementation-Version': version,
                'Main-Class': mainClassFile
    }
    include{sourceSets.main.output.classesDir}
    zip64 true
}

shadowJar {
    classifier = 'shadow'
    append 'reference.conf'
    dependencies {

    }
}

idea {
    module {
        // IntelliJ does not know about the standard idiom of provided as used in managing
        // uber/shaded jar dependencies. Make it so!
        scopes.PROVIDED.plus += [ configurations.provided ]
    }
}
